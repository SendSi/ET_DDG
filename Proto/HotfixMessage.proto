syntax = "proto3";
import "OuterMessage.proto";
package ETHotfix;

message C2R_Login // IRequest
{
	int32 RpcId = 90;
	string	Account	 = 1;	// 帐号
	string	Password = 2;	// 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Address = 1;
	int64 Key	    = 2;
}

message C2G_LoginGate // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;	// 帐号
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PlayerId = 1;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

message C2M_TestActorRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 91;
	string Info = 1;
}

message M2C_TestActorResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Info = 1;
}

message PlayerInfo // IMessage
{
	int32 RpcId = 90;
}

message C2G_PlayerInfo // IRequest
{
	int32 RpcId = 90;
}

message G2C_PlayerInfo // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	PlayerInfo PlayerInfo = 1;
	repeated PlayerInfo PlayerInfos = 2;
    repeated string TestRepeatedString = 3;
    repeated int32 TestRepeatedInt32 = 4;
    repeated int64 TestRepeatedInt64 = 5;
}

message C2R_Login_Req // IRequest
{
	int32 RpcId = 90;
    string Account = 1;
    string Password = 2;
}

message R2C_Login_Ack // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
    int64 Key = 1;
    string Address = 2;
}

message C2R_Register_Req // IRequest
{
	int32 RpcId = 90;
    string Account = 1;
    string Password = 2;
}

message R2C_Register_Ack // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message C2G_LoginGate_Req // IRequest
{
	int32 RpcId = 90;
    int64 Key = 1;
}

message G2C_LoginGate_Ack // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
    int64 PlayerID = 1;
    int64 UserID = 2;
}

message C2G_GetUserInfo_Req // IRequest
{
	int32 RpcId = 90;
    int64 UserID = 1;
}

message G2C_GetUserInfo_Ack // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
    string NickName = 1;
    int32 Wins = 2;
    int32 Loses = 3;
    int64 Money = 4;
}

message C2G_StartMatch_Req // IRequest
{
	int32 RpcId = 90;

}

message G2C_StartMatch_Ack // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

}

message C2G_ReturnLobby_Ntt // IMessage
{

}

message Actor_GamerReady_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
}

message Actor_GamerGrabLandlordSelect_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
    bool IsGrab = 2;
}

message Actor_GamerPlayCard_Req // IActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 91;
    repeated ETModel.Card Cards = 1;
}

message Actor_GamerPlayCard_Ack // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message Actor_GamerPlayCard_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
    repeated ETModel.Card Cards = 2;
}

message Actor_GamerPrompt_Req // IActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 91;

}

message Actor_GamerPrompt_Ack // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
    repeated ETModel.Card Cards = 1;
}

message Actor_GamerDontPlay_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
}

message Actor_Trusteeship_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
    bool isTrusteeship = 2;
}

message GamerInfo
{
    int64 UserID = 1;
    bool IsReady = 2;
}

message Actor_GamerEnterRoom_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    repeated GamerInfo Gamers = 1;
}

message Actor_GamerExitRoom_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
}

//抢地主状态
enum GrabLandlordState
{
	Not = 0;	//未抢地主
	Grab = 1;	//抢地主
	UnGrab = 2; //不抢地主
}

message GamerState
{
    int64 UserID = 1;
    ETModel.Identity UserIdentity = 2;
	GrabLandlordState State = 3;
}

message Actor_GamerReconnect_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
	int64 UserId = 1;
    int32 Multiples = 2;
	repeated ETModel.Card Cards = 3;
    repeated GamerState GamersState = 4;
    repeated ETModel.Card LordCards = 5;
	
}

message GamerCardNum // IMessage
{
    int64 UserID = 1;
    int32 Num = 2;
}

message Actor_GameStart_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    repeated ETModel.Card HandCards = 1;
    repeated GamerCardNum GamersCardNum = 2;
}

message Actor_AuthorityGrabLandlord_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
}

message Actor_AuthorityPlayCard_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
    bool IsFirst = 2;
}

message Actor_SetMultiples_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int32 Multiples = 1;
}

message Actor_SetLandlord_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
    repeated ETModel.Card LordCards = 2;
}

message GamerScore
{
    int64 UserID = 1;
    int64 Score = 2;
}

message Actor_Gameover_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    ETModel.Identity Winner = 1;
    int64 BasePointPerMatch = 2;
    int32 Multiples = 3;
    repeated GamerScore GamersScore = 4;
}

message Actor_GamerMoneyLess_Ntt // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
    int64 UserID = 1;
}
